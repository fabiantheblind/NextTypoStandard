// rectangles.jsx written for TypoStandard @ FHPotsdam WS twothousendeleven// Copyright (C) 2011 Fabian "fabiantheblind" Morón Zirfas// http://www.the-moron.net// http://fabiantheblind.info/// info [at] the - moron . net// This program is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// any later version.// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.// You should have received a copy of the GNU General Public License// along with this program.  If not, see http://www.gnu.org/licenses/var d = app.documents.add(); // create a new documentd.documentPreferences.properties= {pageWidth:300,pageHeight:300};//~ d.documentPreferences.pageWidth = 300;//~ d.documentPreferences.pageHeight = 300;// the width we work with works up to 60// try using numbers like 60 / 30 / 15 / 10 / 5// beware 5 will produce more than 3000 rectangles and colors// this may take a whilevar w = 60;// if you want to rotate the rectangles in degreesvar rotScale = 0;var pw = d.documentPreferences.pageWidth; // for faster accessvar ph = d.documentPreferences.pageHeight; // for faster accessvar p = d.pages.item(0); // the first pagevar rects = new Array(); // this will hold all rectangles// in indesign you cant define a color without a swatch// so this will be a list of swatchesvar cols = new Array();// now make some rectangles in a nested for loop// first loop calcs the Y position// second the calcs the X positionfor(var y1 = w; y1 < pw -w; y1+=w){        for(var x1 = w; x1 < ph -w; x1+=w){            rects.push(p.rectangles.add({geometricBounds:[y1,x1,y1+w,x1+w]}));// add a rectangle to the page            }    }// now we loop thru the rectangles and make as many swatches / colors for them////for(var i = 0; i < rects.length; i++){          // create a rotation Matrix.     // each rectangle will be rotated with i*rotScale     // e.g. if rotScale is 30 it will be 30 / 60 / 90 / 120 / 150 / 180 / ...     var rotTM = app.transformationMatrices.add({counterclockwiseRotationAngle:i*rotScale});      // rotate the rectangle     rects[i].transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.centerAnchor, rotTM);     // make  new color and push it to the cols array     cols.push(                d.colors.add(                                {                                name:"color"+i,                                model:ColorModel.PROCESS,                                space:ColorSpace.RGB ,                                colorValue:[255,(255/rects.length)*i,255]                                }                            )               );     // now apply the color, set the strokeWeight and make the stroke white     rects[i].properties = {                            strokeWeight:1,                            strokeColor:d.swatches.item(2),                            fillColor:cols[i]                            };                                  }// end off second loop