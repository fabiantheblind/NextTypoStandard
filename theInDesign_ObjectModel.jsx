var theGutter = 13;var boxH = theGutter;var boxW = theGutter*5;var offX = theGutter;var offY = theGutter;var shiftnumRGHT = 1;var counter = 0;var d = app.documents.add();with(d.documentPreferences){pageWidth = 500; pageHeight = 210;}d.marginPreferences.left = theGutter;d.marginPreferences.top = theGutter;d.marginPreferences.right = theGutter;d.marginPreferences.bottom = theGutter;d.documentPreferences.pageWidth = 7*boxW +7*offX + d.marginPreferences.left;d.documentPreferences.pageHeight = 7*boxH +5*offY + d.marginPreferences.top;var pw = d.documentPreferences.pageWidth;var ph = d.documentPreferences.pageHeight;	var cVal = new Array();	cVal[0] = 0;//Math.random()*100;	cVal[1] = 0;//Math.random()*100;	cVal[2] = 0;//Math.random()*100;	cVal[3] = 0;//Math.random()*100;		var white = myColorAdd(d, "Color01", ColorModel.PROCESS, [cVal[0],cVal[1],cVal[2],cVal[3]]);var font = "DejaVu Sans Mono	Book";var testTF = d.pages.item(0).textFrames.add();try{     testTF.lines.everyItem().appliedFont = font;        d.pages.item(0).textFrames.lastItem().remove();    }catch(e){        font = "Arial";    d.pages.item(0).textFrames.lastItem().remove();    }var p = d.pages[0];var top = d.marginPreferences.top;var left = d.marginPreferences.left;var y1  = top ;var x1 = left;var y2 = y1+ boxH;var x2 =  x1 + boxW;var tfs = new Array();var lns = new Array();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\napp",label:"app"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1 ,y2 +offY ,x1 ],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nfullName",label:"fullName"}));shiftTop ()shiftRight();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ndocuments[]",label:"docs"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1 ,y2 +offY ,x1 ]}));shiftDown();tfs.push(p.textFrames.add({geometricBounds:[y1,x1 ,y2,x2 ],contents:"\nparagraphStyles[]",label:"parSt"}));lns.push(p.graphicLines.add({geometricBounds:[y2 ,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ncharacterStyles[]",label:"charSt"}));lns.push(p.graphicLines.add({geometricBounds:[y2 ,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nswatches[]",label:"swatches"}));lns.push(p.graphicLines.add({geometricBounds:[y2 ,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nallPageItems[]",label:"allptms"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2 ,x1,y2 +offY,x1]}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nstories[]",label:"stories"}));var thinlns = new Array();thinlns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX*2 + boxW],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));thinlns.push(p.graphicLines.add({geometricBounds:[y2 - boxH,x2+ offX*2 + boxW,y2 - boxH-offY ,x2+ offX*2 + boxW],leftLineEnd:ArrowHead.BARBED_ARROW_HEAD}));for(var i = 0; i<thinlns.length; i++){    thinlns[i].strokeTint = 50;    thinlns[i].strokeType = "Gepunktet";    }shiftTop ();shiftRight();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\npages[]",label:"pages"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();shiftDown ();shiftDown ();shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ntextFrames[]",label:"tf1"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2 - boxH,x1+boxW,y2 - boxH*3 -offY*3,x1+boxW]}));shiftTop ();shiftDown();lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftTop ();shiftRight();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ntextFrames[]",label:"tf2"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nparagraphs[]",label:"p1"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));//~ lns.push(p.graphicLines.add({geometricBounds:[y1,x1 + boxW + offX,y1 - offY,x1 + boxW],leftLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nlines[]",label:"l1"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nwords[]",label:"w1"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ncharacters[]",label:"c1"}));shiftDown ();var storiesTfPar = p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nparagraphs[]",label:"stfp"})    shiftTop(); shiftDown();shiftRight();shiftTop(); tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nfillTint",label:"l2"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],leftLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nlines[]",label:"l2"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nwords[]",label:"w2"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ncharacters[]",label:"c2"}));shiftTop();shiftDown();shiftRight();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\nwords[]",label:"w3"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y1,x1,y1  - offY,x1]}));lns.push(p.graphicLines.add({geometricBounds:[y1-offY,x1  , y1  - offY,x1-offX],leftLineEnd:ArrowHead.BARBED_ARROW_HEAD}));shiftDown ();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ncharacters[]",label:"c3"}));shiftTop();shiftDown();shiftRight();tfs.push(p.textFrames.add({geometricBounds:[y1,x1,y2,x2],contents:"\ncharacters[]",label:"c4"}));lns.push(p.graphicLines.add({geometricBounds:[y2,x2,y2,x2+ offX],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y2,x1,y2 +offY,x1],rightLineEnd:ArrowHead.BARBED_ARROW_HEAD}));lns.push(p.graphicLines.add({geometricBounds:[y1,x1,y1  - offY,x1]}));lns.push(p.graphicLines.add({geometricBounds:[y1-offY,x1  , y1  - offY,x1-offX-boxW],leftLineEnd:ArrowHead.BARBED_ARROW_HEAD}));storiesTfPar.strokeType = "Gepunktet";storiesTfPar.strokeTint = 50;storiesTfPar.strokeWeight = 1;storiesTfPar.lines.everyItem().appliedFont = font;storiesTfPar.paragraphs.everyItem().justification =  Justification.CENTER_ALIGN;var lastTF = p.textFrames.add({geometricBounds:[ph - boxH,pw - boxW*3,ph,pw],contents:"excerpt if the InDesign Object Model",label:"label"});lastTF.lines.everyItem().appliedFont = font;for(var i = 0; i < tfs.length; i ++){        var t = tfs[i];        t.strokeWeight = 1;        t.fillColor = white;        t.strokeType = "Gepunktet";                       for(var j = 0; j < t.paragraphs.length; j ++ ){        var par = t.paragraphs[j];        par.appliedFont = font;        par.justification =  Justification.CENTER_ALIGN;        par.pointSize = theGutter;        par.leading = theGutter;               }    }for(var k = 0; k < lns.length;k++){    lns[k].strokeType = "Gepunktet";    }d.documentPreferences.pageWidth = shiftnumRGHT*boxW +shiftnumRGHT*offX + d.marginPreferences.left;d.documentPreferences.pageHeight = 7*boxH +5*offY + d.marginPreferences.top;function shiftDown(){    y1 = y2 + offY;    y2 = y1 + boxH; //~ cicle();    }function shiftUp(){    y2 = y1 - offX;    y1 = y2 - boxW; //~     cicle();    }function shiftTop(){        y1  = top;    y2 = y1+ boxH;//~ cicle();    }function shiftRight(){  x1 = x2 + offX;x2 = x1 + boxW;shiftnumRGHT++;//~ cicle();    }function shiftBack(){  x2 = x1 - boxW;  x1 = x2 - offX;    }function cicle(){        //~     var rotTM = app.transformationMatrices.add({counterclockwiseRotationAngle:(counter*45)-45 });// rotate (the 180 is for getting the line start upwards)    var rad = 1.5;    var o = p.ovals.add({geometricBounds:[y1-rad,x1-rad,y1+rad,x1+rad]});    var tp = o.textPaths.add();//~     tp.contents  = counter.toString();//~     o.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.centerAnchor, rotTM);            counter++;    }function myColorAdd(myDocument, myColorName, myColorModel, myColorValue){    if(myColorValue instanceof Array == false){        myColorValue = [(parseInt(myColorValue, 16) >> 16 ) & 0xff, (parseInt(myColorValue, 16) >> 8 ) & 0xff, parseInt(myColorValue, 16 ) & 0xff ];        myColorSpace = ColorSpace.RGB;    }else{        if(myColorValue.length == 3)          myColorSpace = ColorSpace.RGB;        else          myColorSpace = ColorSpace.CMYK;    }    try{        myColor = myDocument.colors.item(myColorName);        myName = myColor.name;    }    catch (myError){        myColor = myDocument.colors.add();        myColor.properties = {name:myColorName, model:myColorModel, space:myColorSpace ,colorValue:myColorValue};    }    return myColor;}